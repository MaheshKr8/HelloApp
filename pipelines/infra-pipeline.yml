trigger: none   # Run manually

pool:
  vmImage: ubuntu-latest

variables:
  azureServiceConnection: 'my-service-connection'  # Your Azure DevOps service connection name
  subscriptionId: 'd199062a-9d18-43ed-bee5-666c1b771e79'
  resourceGroupName: 'RG_helloApp'
  storageAccountName: 'mystorageaccounthelloapp'
  containerName: 'akscontainer'
  tfstateFile: 'terraform.tfstate'
  tfWorkingDirectory: 'HelloApp/infra'   # folder where main.tf is stored

stages:
- stage: Terraform
  displayName: 'Terraform AKS Deployment'
  jobs:
  - job: Deploy
    displayName: 'Run Terraform'
    steps:
    # Terraform Init
    - task: TerraformTaskV5@5
      displayName: 'Terraform Init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(tfWorkingDirectory)'
        backendServiceArm: '$(azureServiceConnection)'
        backendAzureRmOverrideSubscriptionId: '$(subscriptionId)'
        backendAzureRmResourceGroupName: '$(resourceGroupName)'
        backendAzureRmStorageAccountName: '$(storageAccountName)'
        backendAzureRmContainerName: '$(containerName)'
        backendAzureRmKey: '$(tfstateFile)'

    # Terraform Plan
    - task: TerraformTaskV5@5
      displayName: 'Terraform Plan'
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(tfWorkingDirectory)'
        environmentServiceNameAzureRM: '$(azureServiceConnection)'

    # Terraform Apply
    - task: TerraformTaskV5@5
      displayName: 'Terraform Apply'
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(tfWorkingDirectory)'
        environmentServiceNameAzureRM: '$(azureServiceConnection)'
        commandOptions: '-auto-approve'

